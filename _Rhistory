View()
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs_campaigns = F3D.Utilities::presto_datacluster("campaign_lookup_dataTransfer as (
SELECT campaign_id, campaign
FROM (
SELECT campaign,
campaign_id,
dated,
MAX(CAST(dated as DATE)) OVER(PARTITION BY campaign_id) as max_date
FROM marina_bay_sands_datatransfer_campaigns )
WHERE CAST(dated as DATE) = max_date")
mbs_campaigns = F3D.Utilities::presto_datacluster("
SELECT campaign_id, campaign
FROM (
SELECT campaign,
campaign_id,
dated,
MAX(CAST(dated as DATE)) OVER(PARTITION BY campaign_id) as max_date
FROM marina_bay_sands_datatransfer_campaigns )
WHERE CAST(dated as DATE) = max_date")
View(mbs_campaigns)
mbs_campaigns = mbs_campaigns %>%
mutate(len = nchar(campaign))
View(mbs_campaigns)
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
View(head(mbs))
View(mbs)
mbs %>% head() %>% View()
mbs$`_col4` %>% table() %>% View()
table(mbs$`_col4`, mbs$max_characters) %>% View()
mbs %>% filter(max_characters == 72) %>% View()
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs$max_characters %>% table()
mbs[mbs$max_characters == 72, ] %>% View()
mbs[mbs$`_col4` >500, ] %>% View()
mbs$max_characters %>% table()
mbs[mbs$`_col4` >500, ] %>% View()
mean(mbs$max_characters)
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mean(mbs$max_characters)
max(mbs$cardinality)
ggplot(mbs, aes(x = cardinality)) + geom_histogram()
ggplot(mbs, aes(x = cardinality)) + geom_histogram(bins = 50) + scale_x_discrete(breaks = scales::pretty_breaks())
ggplot(mbs[mbs$cardinality >5,], aes(x = cardinality)) + geom_histogram(bins = 50) + scale_x_discrete(breaks = scales::pretty_breaks())
mbs %>% head() %>% View()
ggplot(mbs, aes(x = cardinality, y = max_characters)) + geom_point()
sample(letters, 37)
sample(letters, 37, replace = T)
paste(sample(letters, 37, replace = T), collapse = "")
test = lapply(i in 1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj',__REPEATS__)",
list = ("__REPEATS__" = x))
})
1:10
test = lapply(i in 1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj',__REPEATS__)",
list = ("__REPEATS__" = x))
})
test = lapply(i in 1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj','__REPEATS__')",
list = ("__REPEATS__" = x))
})
test = lapply(i in 1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj',CAST('__REPEATS__' AS DOUBLE))",
list = ("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj',CAST('__REPEATS__' AS DOUBLE))",
list = ("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj',CAST('__REPEATS__' AS DOUBLE))",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj','__REPEATS__')",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj','__REPEATS__')",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj',__REPEATS__)",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj', __REPEATS__)",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj', CAST(__REPEATS__ AS DOUBLE))",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj', CAST(__REPEATS__ AS DOUBLE))",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj', CAST(__REPEATS__ AS DOUBLE))",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj', CAST(__REPEATS__ AS DOUBLE))",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj', CAST(__REPEATS__ AS INT))",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj', CAST(__REPEATS__ AS INT))",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj', __REPEATS__)",
list("__REPEATS__" = x))
})
test = lapply(1:10, function(x){
F3D.Utilities::presto_read_sub_run("SELECT REPEAT('vtzbykhryfznaswjyiibkrlnnputkukszumlj', __REPEATS__)",
list("__REPEATS__" = as.character(x)))
})
View(test)
}
TestArrayDistinct = function(max_cardinality, character_len = 37){
test = lapply(1:max_cardinality, function(x){
F3D.Utilities::presto_read_sub_run(paste0("SELECT REPEAT('", sample(letters, character_len, replace = TRUE), "', __REPEATS__)"),
list("__REPEATS__" = as.character(x)))
})
}
test = TestArrayDistinct(max_cardinality = 100,
character_len = 20)
TestArrayDistinct = function(max_cardinality, character_len = 37){
test = lapply(1:max_cardinality, function(x){
browser()
F3D.Utilities::presto_read_sub_run(paste0("SELECT REPEAT('", sample(letters, character_len, replace = TRUE), "', __REPEATS__)"),
list("__REPEATS__" = as.character(x)))
})
}
test = TestArrayDistinct(max_cardinality = 100,
character_len = 20)
paste0("SELECT REPEAT('", sample(letters, character_len, replace = TRUE), "', __REPEATS__)")
TestArrayDistinct = function(max_cardinality, character_len = 37){
test = lapply(1:max_cardinality, function(x){
browser()
F3D.Utilities::presto_read_sub_run(paste0("SELECT REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__)"),
list("__REPEATS__" = as.character(x)))
})
}
test = TestArrayDistinct(max_cardinality = 100,
character_len = 20)
TestArrayDistinct = function(max_cardinality, character_len = 37){
test = lapply(1:max_cardinality, function(x){
F3D.Utilities::presto_read_sub_run(paste0("SELECT REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__)"),
list("__REPEATS__" = as.character(x)))
})
}
test = TestArrayDistinct(max_cardinality = 100,
character_len = 20)
TestArrayDistinct = function(min_cardinality = 1, max_cardinality, character_len = 37){
lapply(min_cardinality:max_cardinality, function(x){
F3D.Utilities::presto_read_sub_run(paste0("SELECT ARRAY_DISTINCT(REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__))"),
list("__REPEATS__" = as.character(x)))
})
}
test = TestArrayDistinct(max_cardinality = 1000, min_cardinality = 500,
character_len = 20)
TestArrayDistinct = function(min_cardinality = 1, max_cardinality, character_len = 37){
tryCatch({
lapply(min_cardinality:max_cardinality, function(x){
F3D.Utilities::presto_read_sub_run(paste0("SELECT ARRAY_DISTINCT(REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__))"),
list("__REPEATS__" = as.character(x)))
print(paste0("testing for cardinality ", x))
})
}, error = function(e){
stop(paste0("Stopped when cardinality was ", x, " and each element of the array was ", character_len))
})
}
test = TestArrayDistinct(max_cardinality = 1000, min_cardinality = 500,
character_len = 20)
test = TestArrayDistinct(max_cardinality = 10000, min_cardinality = 12000,
character_len = 50)
TestArrayDistinct = function(min_cardinality, max_cardinality , character_len = 37){
tryCatch({
lapply(min_cardinality:max_cardinality, function(x){
F3D.Utilities::presto_read_sub_run(paste0("SELECT ARRAY_DISTINCT(REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__))"),
list("__REPEATS__" = as.character(x)))
print(paste0("testing for cardinality ", x))
})
}, error = function(e){
stop(paste0("Stopped when cardinality was ", x, " and each element of the array was ", character_len))
})
}
test = TestArrayDistinct(max_cardinality = 10000, min_cardinality = 12000,
character_len = 50)
test = TestArrayDistinct(max_cardinality = 12000, min_cardinality = 10000,
character_len = 50)
TestArrayDistinct = function(min_cardinality, max_cardinality , character_len = 37){
tryCatch({
lapply(min_cardinality:max_cardinality, function(x){
browser()
F3D.Utilities::presto_read_sub_run(paste0("SELECT ARRAY_DISTINCT(REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__))"),
list("__REPEATS__" = as.character(x)))
print(paste0("testing for cardinality ", x))
})
}, error = function(e){
stop(paste0("Stopped when cardinality was ", x, " and each element of the array was ", character_len))
})
}
test = TestArrayDistinct(max_cardinality = 12000, min_cardinality = 10000,
character_len = 50)
TestArrayDistinct = function(min_cardinality, max_cardinality , character_len = 37){
browser()
tryCatch({
lapply(min_cardinality:max_cardinality, function(x){
browser()
F3D.Utilities::presto_read_sub_run(paste0("SELECT ARRAY_DISTINCT(REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__))"),
list("__REPEATS__" = as.character(x)))
print(paste0("testing for cardinality ", x))
})
}, error = function(e){
stop(paste0("Stopped when cardinality was ", x, " and each element of the array was ", character_len))
})
}
test = TestArrayDistinct(max_cardinality = 12000, min_cardinality = 10000,
character_len = 50)
min_cardinality:max_cardinality
Q
TestArrayDistinct = function(cardinalities , character_len = 37){
browser()
tryCatch({
lapply(cardinalities, function(x){
browser()
F3D.Utilities::presto_read_sub_run(paste0("SELECT ARRAY_DISTINCT(REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__))"),
list("__REPEATS__" = as.character(x)))
print(paste0("testing for cardinality ", x))
})
}, error = function(e){
stop(paste0("Stopped when cardinality was ", x, " and each element of the array was ", character_len))
})
}
test = TestArrayDistinct(cardinalities = c(10000, 2000),
character_len = 50)
Q
TestArrayDistinct = function(cardinalities , character_len = 37){
tryCatch({
lapply(cardinalities, function(x){
F3D.Utilities::presto_read_sub_run(paste0("SELECT ARRAY_DISTINCT(REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__))"),
list("__REPEATS__" = as.character(x)))
print(paste0("testing for cardinality ", x))
})
}, error = function(e){
stop(paste0("Stopped when cardinality was ", x, " and each element of the array was ", character_len))
})
}
test = TestArrayDistinct(cardinalities = c(10000, 2000),
character_len = 50)
test = TestArrayDistinct(cardinalities = c(10000, 2000, 90000),
character_len = 50)
TestArrayDistinct = function(cardinalities , character_len = 37){
lapply(cardinalities, function(x){
tryCatch({
F3D.Utilities::presto_read_sub_run(paste0("SELECT ARRAY_DISTINCT(REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__))"),
list("__REPEATS__" = as.character(x)))
print(paste0("testing for cardinality ", x))
}, error = function(e){
stop(paste0("Stopped when cardinality was ", x, " and each element of the array was ", character_len))
})
})
}
test = TestArrayDistinct(cardinalities = c(10000, 2000, 90000),
character_len = 50)
test = TestArrayDistinct(cardinalities = c(10000, 2000, 50000, 40000, 20000, 90000),
character_len = 50)
test = TestArrayDistinct(cardinalities = c(10000, 2000, 30000, 50000, 40000, 20000, 90000),
character_len = 50)
test = TestArrayDistinct(cardinalities = seq(10000, 30000, by = 2000),
character_len = 50)
test = TestArrayDistinct(cardinalities = seq(10000, 30000, by = 2000),
character_len = 10)
test = TestArrayDistinct(cardinalities = seq(10000, 30000, by = 500),
character_len = 10)
test = TestArrayDistinct(cardinalities = seq(10000, 30000, by = 10),
character_len = 10)
test = TestArrayDistinct(cardinalities = seq(9000, 30000, by = 10),
character_len = 10)
test = TestArrayDistinct(cardinalities = seq(9000, 9999, by = 10),
character_len = 200)
TestArrayDistinct = function(cardinalities , character_len = 37){
lapply(cardinalities, function(x){
# tryCatch({
F3D.Utilities::presto_read_sub_run(paste0("SELECT ARRAY_DISTINCT(REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__))"),
list("__REPEATS__" = as.character(x)))
print(paste0("testing for cardinality ", x))
# }, error = function(e){
#
#   stop(paste0("Stopped when cardinality was ", x, " and each element of the array was ", character_len))
# })
})
}
test = TestArrayDistinct(cardinalities = seq(9000, 9999, by = 10),
character_len = 200)
test = TestArrayDistinct(cardinalities = seq(9000, 9999, by = 10),
character_len = 100)
TestArrayDistinct = function(cardinalities , character_len = 37){
lapply(cardinalities, function(x){
# tryCatch({
F3D.Utilities::presto_read_sub_run(paste0("SELECT ARRAY_DISTINCT(REPEAT('", paste(sample(letters, character_len, replace = TRUE), collapse = ""), "', __REPEATS__))"),
list("__REPEATS__" = as.character(x)))
print(paste0("testing for cardinality ", x))
# }, error = function(e){
#
#   stop(paste0("Stopped when cardinality was ", x, " and each element of the array was ", character_len))
# })
})
}
test = TestArrayDistinct(cardinalities = seq(9000, 9999, by = 10),
character_len = 100)
Sys.Date()
Sys.time()
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs %>%
head() %>%
rowwise() %>%
mutate(cardinality = length(array_impressions_by_teaulium_user))
View(head(mbs, 1000))
mbs_explore = mbs %>%
rowwise() %>%
mutate(cardinality = length(array_impressions_by_teaulium_user))
mbs_explore = mbs %>%
rowwise() %>%
mutate(cardinality = length(array_impressions_by_teaulium_user),
character_avg = mean(sapply(array_impressions_by_teaulium_user, nchar)),
character_max = max(sapply(array_impressions_by_teaulium_user, nchar)))
warnings()
filter(mbs, length(array_impressions_by_teaulium_user) >0) %>% nrow()
mbs %>% rowwise() %>% filter(length(array_impressions_by_teaulium_user) >0) %>% nrow()
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
View(mbs)
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
View(mbs)
View(mbs)
mbs$array_impressions_by_teaulium_user
sapply(mbs$array_impressions_by_teaulium_user, function(x){
stringr::str_extract(string = x, pattern = "\\${3}([0-9])")
})
stringr::str_extract(string = x, pattern = "\\${3}([0-9])+")
sapply(mbs$array_impressions_by_teaulium_user, function(x){
stringr::str_extract(string = x, pattern = "\\${3}([0-9])+")
})
sapply(mbs$array_impressions_by_teaulium_user, function(x){
gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "$$$", replacement = "")
})
sapply(mbs$array_impressions_by_teaulium_user, function(x){
gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = "")
})
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
View(mbs)
sapply(mbs$array_impressions_by_teaulium_user, function(x){
gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = "")
})
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
sapply(mbs$array_impressions_by_teaulium_user, function(x){
gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = "")
})
as.POSIXct(1538572882)
as.POSIXct(1538572882, origin = "1970-01-01")
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
as.POSIXct(gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = ""), origin = "1970-01-01")
})
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = "")
})
table(yeah)
table(yeah) %>% View()
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
as.POSIXct(as.numeric(gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = "")), origin = "1970-01-01")
})
table(yeah) %>% View()
yeah
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
as.Date(as.POSIXct(as.numeric(gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = "")), origin = "1970-01-01"))
})
table(yeah) %>% View()
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
as.numeric(gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = ""))
})
yeah
as.Post
as.POSIXct(1538549521, origin = "1970-01-01")
as.POSIXct(1538549521, origin = "1970-01-01") %>% as.Date()
as.POSIXct(1538549521, origin = "1970-01-01") %>% as.Date()
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
as.numeric(gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = ""))
})
table(yeah) %>% View()
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
as.numeric(gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = ""))
})
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
as.POSIXct(as.numeric(gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = "")), origin = "1970-01-01")
})
table(yeah) %>% View()
as.POSIXct(1538549521, origin = "1970-01-01") %>% as.Date()
la = as.POSIXct(1538549521, origin = "1970-01-01")
la
la = as.POSIXlt(1538549521, origin = "1970-01-01")
la
la = as.POSIXct(1538549521, origin = "1970-01-01", tz = "UTC")
la = as.POSIXct(1538549521, origin = "1970-01-01", tz = "UTC") %>% as.Date()
la
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
as.Date(as.POSIXct(as.numeric(gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = "")), origin = "1970-01-01", tz = "UTC"))
})
yeah
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
string_time = gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = ""))
as.numeric(string_time)
})
yeah = sapply(mbs$array_impressions_by_teaulium_user, function(x){
string_time = gsub(x = stringr::str_extract(string = x, pattern = "\\${3}([0-9])+"), pattern = "\\${3}", replacement = "")
as.numeric(string_time)
})
table(yeah) %>% View()
max(yeah)
as.POSIXct(max(yeah), origin = "1970-01-01", tz = "UTC")
as.POSIXct(min(yeah), origin = "1970-01-01", tz = "UTC")
View(mbs)
View(mbs)
mbs$cardinality
length(unique(mbs$array_impressions_by_teaulium_user))
lala
unique(mbs$array_impressions_by_teaulium_user[1]) %>% length()
unique(mbs$array_impressions_by_teaulium_user[1])
lol = mbs$array_impressions_by_teaulium_user[1]
lol = mbs$array_impressions_by_teaulium_user[[1]]
unique(lol) %>% length()
lol
unique(lol) %>% length()
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
View(mbs)
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
max(mbs$cardinality)
mbs %>% select(final_ga_id, cardinality, max_characters, min_characters) %>% View()
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
View(mbs)
mbs = F3D.Utilities::presto_read_sub_run(query = "~/Desktop/jobs/attribution-by-sql/clients/marina_bay_sands.sql",
list("__DATE__" = "2018-10-03"))
9+16
View(mbs)
sqrt(6)
1/sqrt(6)
c(1,0,2,1)/sqrt(6)
(c(1,0,2,1)/sqrt(6)) * (c(1,0,2,1)/sqrt(6))
(c(1,0,2,1)/sqrt(6)) ** (c(1,0,2,1)/sqrt(6))
(c(1,0,2,1)/sqrt(6))
c(0,1,8,-6) - sum(c(0,1,8,-6)*(c(1,0,2,1)/sqrt(6)))*(c(1,0,2,1)/sqrt(6))
vec2 = c(0,1,8,-6) - sum(c(0,1,8,-6)*(c(1,0,2,1)/sqrt(6)))*(c(1,0,2,1)/sqrt(6))
vec2/sqrt(sum(vec2*vec2))
c(0.40824829, 0, 0.81649658, 0.40824829) * c(0.40824829, 0, 0.81649658, 0.40824829) %>% sqrt()
c(0.40824829, 0, 0.81649658, 0.40824829) * c(0.40824829, 0, 0.81649658, 0.40824829) %>% sum() %>% sqrt()
c(0.40824829, 0, 0.81649658, 0.40824829) * c(0.40824829, 0, 0.81649658, 0.40824829) %>% sum()
sum(c(0.40824829, 0, 0.81649658, 0.40824829) * c(0.40824829, 0, 0.81649658, 0.40824829))
sqrt(1)
F3D.Utilities::describe_client(clientname = "virgin-holidays")
lol = F3D.Utilities::describe_client(clientname = "virgin_holidays")
View(lol)
F3D.Utilities::f3d_pal()
lol=F3D.Utilities::network_monitoring(url = "https://www.abola.pt")
F3D.Utilities::scale_color_f3d(scheme = "red")
lol = F3D.Utilities::unicode_awesome()
View(lol)
